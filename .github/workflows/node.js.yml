# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASEHOSTNAME:  ${{ secrets.DATABASEHOSTNAME }}
      DATABASEUSERNAME: ${{ secrets.DATABASEUSERNAME }}
      DATABASEPASSWORD: ${{ secrets.DATABASEPASSWORD }}
      DATABASENAME: ${{ secrets.DATABASENAME }}
      DATABASEPORT: ${{ secrets.DATABASEPORT }}
      DATABASESSLBASE64: ${{ secrets.DATABASESSLBASE64 }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_PATH: ${{ secrets.SERVER_PATH }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

    strategy:
      matrix:
        node-version: [ 21.x ]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm run start &
    - run: npm test
    
    - name: Compress build directory and additional files
      run: tar -czvf deploy.tar.gz build ./src/backend/main.js ./src/backend/db.js

    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo -e "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts


    - name: Add public key to authorized_keys on server
      run: |
        echo "${{ secrets.SSH_PUBLIC_KEY }}" | ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.SERVER_IP }} "cat >> ~/.ssh/authorized_keys"


    - name: Deploy to server using sshpass
      run: |
        scp deploy.tar.gz root@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_PATH }}

    - name: Clean up SSH key
      run: rm -f ~/.ssh/id_rsa
