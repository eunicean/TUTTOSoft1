# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASEHOSTNAME:  ${{ secrets.DATABASEHOSTNAME }}
      DATABASEUSERNAME: ${{ secrets.DATABASEUSERNAME }}
      DATABASEPASSWORD: ${{ secrets.DATABASEPASSWORD }}
      DATABASENAME: ${{ secrets.DATABASENAME }}
      DATABASEPORT: ${{ secrets.DATABASEPORT }}
      DATABASESSLBASE64: ${{ secrets.DATABASESSLBASE64 }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_PATH: ${{ secrets.SERVER_PATH }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

    strategy:
      matrix:
        node-version: [ 21.x ]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm run start &
    - run: npm test
    
    - name: Compress build directory and additional files
      run: tar -czvf deploy.tar.gz build ./src/backend/main.js ./src/backend/db.js

    - name: Generate SSH key
      run: |
        ssh-keygen -t rsa -b 4096 -m PEM -f ${{ github.workspace }}/deploy_key -q -N ""
        # Print the public key and capture it for later use in setting up the server
        cat ${{ github.workspace }}/deploy_key.pub

    - name: Deploy Public Key to Server
      run: |
        echo "${{ secrets.SSH_PASSWORD }}" | sshpass ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'
      env:
        SSH_PUBLIC_KEY: ${{ steps.gen_ssh.outputs.public_key }}

    - name: Use the SSH Key for Deployment
      run: |
        scp -i ${{ github.workspace }}/deploy_key deploy.tar.gz root@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_PATH }}
      env:
        DEPLOY_KEY: ${{ steps.gen_ssh.outputs.private_key }}

    - name: Cleanup SSH Keys
      run: |
        rm -f ${{ github.workspace }}/deploy_key
        rm -f ${{ github.workspace }}/deploy_key.pub
